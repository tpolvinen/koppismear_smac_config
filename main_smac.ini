[files]
sourcecfg = sources_smac.ini # config file for control settings in different sources
timercfg = timers_smac.ini # config file for source change timers

[general]
tstampcol = Datetime # name of column to hold local timestamp
logging = logging.cfg # name of logging config file
logname = base # which configured log to use
datadir = ./data
#/mnt/datadrive/measdata/smac # directory to hold data files
janitordays = 1 # Remove outvars daily
janitorspare = 300 # Preserve 5 minutes data when cleaning outvars

[ports] # port objects, module.Class
serial1 = serial.Serial
# serial2 = serial.Serial
# serial3 = serial.Serial
# serial4 = serial.Serial
csvp = alternatecsv.base
fauxp = faux.fauxport
[serial1] # config options / class init parameter values for each port object
port = /dev/ttyUSB0
timeout = 1
# [serial2]
# port = /dev/ttyUSB1
# timeout = 1
# [serial3]
# port = /dev/ttyUSB2
# timeout = 1
# [serial4]
# port = /dev/ttyUSB3
# timeout = 1
[csvp]
port = /dev/null
[fauxp]
port = /dev/null

[connObjects] # connection objects between ports and data sources and sinks, module.Class
# g1301con = Picarro.Picarro
csvc = alternatecsv.mediator
adc1 = adam.adamconn
# adc2 = adam.adamconn
nokc = Nokeval.Nokevalconn
#fauxc = faux.fauxconn
# [g1301con]
# port = serial1
# name = g1301
# series = 1
[adc1]
port = serial1 # serial4
name = 1
# [adc2]
# port = serial4
# name = 2
[nokc]
port = serial1 # serial4
name = 3
[csvc]
port = csvp
[fauxc]
port = fauxp

[dataSources] # data source objects, module.Class
# g1301 = Picarro.reader #Not functional yet
tsensors = Nokeval.Nokevalrange
# [g1301] # config options / class init parameter values for each data source object
# connobject = g1301con # must exist in connObjects config
# variables = ign1,ign2,ign3,ign4,CO2,CO2d,CH4,CH4d,H2O #check these out, it's giving out quite a lot more fields..
# interval = 10 # how often is this source read
# debug = 0
[tsensors]
connobject = nokc
channels = 1-2 # 1-6
variables = T1,T2 # T1,T2,T3,T4,T5,T6
interval = 10

[dataSinks] # data sink objects, module.Class
csvs = alternatecsv.writer
[csvs] # config options / class init parameter values for each data sink object
connobject = csvc
name = csvout
variables = T1,T2 # CO2,CO2d,CH4,CH4d,H2O,T1,T2,T3,T4,T5,T6
interval = 10 # how often to write to this sink (seconds)
timelim = 1 d
sizelim = 5 MB
maxwait = 20 # how many seconds to wait for rows to complete before writing NA to missing variables
outfile = smac_csv.csv
midnight = True # start new file ar midnight
recsource = True # should current source be sent to this sink?

[controls] # control objects, module.Class
# motor1 = adam.a4k
# motor2 = adam.a4k
# motor3 = adam.a4k
# motor4 = adam.a4k
# motor5 = adam.a4k
# motor6 = adam.a4k
# fan = adam.a4k
valve1 = adam.a4k
valve2 = adam.a4k
valve3 = adam.a4k
valve4 = adam.a4k
valve5 = adam.a4k
valve6 = adam.a4k
valve7 = adam.a4k
# [motor1]
# adc1 = connobject
# name = 0
# nick = motor1
# value = 0,1
# [motor2]
# connobject = adc1
# name = 1
# nick = motor2
# value = 0,1
# [motor3]
# connobject = adc1
# name = 2
# nick = motor3
# value = 0,1
# [motor4]
# connobject = adc2
# name = 0
# nick = motor4
# value = 0,1
# [motor5]
# connobject = adc2
# name = 1
# nick = motor5
# value = 0,1
# [motor6]
# connobject = adc2
# name = 2
# nick = motor6
# value = 0,1
# [fan]
# connobject = adc1
# name = 6
# nick = fan
# value = 0,1
[valve1]
connobject = adc1
name = 0
nick = valve1
value = 0,1
[valve2]
connobject = adc1
name = 1
nick = valve2
value = 0,1
[valve3]
connobject = adc1
name = 2
nick = valve3
value = 0,1
[valve4]
connobject = adc1
name = 3
nick = valve4
value = 0,1
[valve5]
connobject = adc1
name = 4
nick = valve5
value = 0,1
[valve6]
connobject = adc1
name = 5
nick = valve6
value = 0,1
[valve7]
connobject = adc1
name = 7
nick = valve7
value = 0,1

# [reacts] # react objects that take values from source and use a control based on the data
# co2pid = PID.PID # module.Class
# [co2pid]
# nick=CO2PID
# name=mfc1
# variables=CO2
# interval=10
# setpoint=400
# value=0-1000
# P=15
# I=0.1
# D=0.3
